{:simlayers {:f-mode {:key :f}    ; delimeters    ( ) [ ] { } and other symbols ~ $ &
             :d-mode {:key :d}    ; arithmetic    + - * / = % < > #
             :s-mode {:key :s}    ; punctuation   ? ! : ; ' " ` ~
             :a-mode {:key :a}    ; navigation hjkl + tab + enter + page down/up
             ;
             :q-mode {:key :q}    ; General shortcuts (browser etc.) - not settled
             :w-mode {:key :w}    ; Selection left and right (letter, word, line)
             :e-mode {:key :e}    ; Movement left and right (letter, word, line)
             :r-mode {:key :r}    ; Deletion left and right (letter, word, line)
             ;
             :g-mode {:key :g}    ; Mouse scroll, desktop left-right, zoom in-out, screenshot (not implemented)
             ;
             :v-mode {:key :v}    ; Number pad with + - BS ENTER as well
             :c-mode {:key :c}    ; Slashes and lines  ^ | \ _ @
             :x-mode {:key :x}    ; Some multi-character shortcuts like <= (not implemented)
             }

 :devices {:amk [{:vendor_id 76, :product_id 615}] ;; Apple Magic Keyboard
           :a2k [{:vendor_id 10730, :product_id 258}] ;; Advantage2 Kinesis 
           :dot [{:vendor_id 1046, :product_id 291}] ;; Ducky One Two SF 
           }

 :main [; modifications: 

        {:des "right option to CTRL + b (tmux)"
         :rules [[:right_option :!Tb]]}

        ; layers: 

        {:des "f-mode for delimeters and ! ? $"
         :rules [:f-mode
                 [:##u :!Sopen_bracket]
                 [:##i :!Sclose_bracket]
                 [:##j :!S9]
                 [:##k :!S0]
                 [:##m :open_bracket]
                 [:##comma :close_bracket]
                 [:##o :!S1]
                 [:##l :!Sslash]
                 [:##period :!S4]]}

        {:des "d-mode for arithmetic"    ;;    < > #    + - =    * / %
         :rules [:d-mode
                 [:##u     :!Scomma]               ; d -> o        <
                 [:##i    :!Speriod]               ; d -> p        >
                 [:##o       :slash]               ; d -> o        /

                 [:##j         :!Sequal_sign]      ; d -> j        +
                 [:##k         :hyphen]            ; d -> k        -
                 [:##l         :equal_sign]        ; d -> l        =

                 [:##m :!S8]                       ; d -> m        *
                 [:##comma   :!S3]                 ; d -> ,        #
                 [:##period :!S5]                  ; d -> .        %
                 ]}

        {:des "s-mode for punctuation"   ;;    ' " `    , . &    ; : ~
         :rules [:s-mode
                 [:##u :quote]
                 [:##i :!Squote]
                 [:##o :grave_accent_and_tilde]
                 [:##j :comma]
                 [:##k :period]
                 [:##comma :!S7]
                 [:##m :semicolon]
                 [:##l :!Ssemicolon]
                 [:##period :!Sgrave_accent_and_tilde]]}

        {:des "a- mode for navigation h j k l"
         :rules [:a-mode
                 [:##j :down_arrow]
                 [:##h :left_arrow]
                 [:##k :up_arrow]
                 [:##l :right_arrow]
                 [:##n :return_or_enter]
                 [:##m :return_or_enter]
                 [:##u :tab]
                 [:##i :tab]
                 [:comma :page_down]
                 [:period :page_up]]}

        {:des "r-mode for deleting characters with ui, words with jk and lines with hl"
         :rules [:r-mode
                 [:##u :delete_or_backspace]   ; r -> j   Delete word backwards
                 [:##i :delete_forward]        ; r -> j   Delete word backwards
                 [:##j :!Odelete_or_backspace] ; r -> j   Delete word backwards
                 [:##k :!Odelete_forward]      ; r -> k   Delete word forwards
                 [:##h :!Cdelete_or_backspace] ; r -> h   Delete to beginning of line
                 [:##l :!Cdelete_forward]      ; r -> l   Delete to end of line
                 ]}

        {:des "e-mode allows for easy back and forth one character, word or line"
         :rules [:e-mode
                 [:##u         :left_arrow]          ; e -> u    Left
                 [:##i         :right_arrow]         ; e -> i    Right
                 [:##j         :!Oleft_arrow]        ; e -> j    Opt+Left
                 [:##k         :!Oright_arrow]       ; e -> k    Opt+Right
                 [:##h         :!Cleft_arrow]        ; e -> h    Cmd+Left
                 [:##l         :!Cright_arrow]       ; e -> l    Cmd+Right
                 [:n           :return_or_enter]     ; e -> n    Enter
                 [:m           :return_or_enter]     ; e -> m    Enter
                 ]}

        {:des "w-mode = e-mode + SHIFT (i.e. selection, not just movement)"
         :rules [:w-mode
                 [:##u         :!Sleft_arrow]         ; e -> u    Shift+Left
                 [:##i         :!Sright_arrow]        ; e -> i    Shift+Right
                 [:##j         :!SOleft_arrow]        ; e -> j    Shift+Opt+Left
                 [:##k         :!SOright_arrow]       ; e -> k    Shift+Opt+Right
                 [:##h         :!SCleft_arrow]        ; e -> h    Shift+Cmd+Left
                 [:##l         :!SCright_arrow]       ; e -> l    Shift+Cmd+Right
                 ]}

        {:des "q-mode for general shortcuts like browser tab navigation"
         :rules [:q-mode
                 [:##j :!CSopen_bracket]  ; q -> j    tab to the left:  Cmd-{
                 [:##k :!CSclose_bracket] ; q -> k    tab to the right: Cmd-}
                 [:##l :!TCf]  ; q -> l    toggle full screen: ^âŒ˜F
                 [:##u :!Cclose_bracket]  ; q -> u    browser back:     Cmd-[
                 [:##i :!Cclose_bracket]  ; q -> i    browser forward:  Cmd-]
                 ]}

        {:des "v-mode for window management with Spectacle"
         :rules [:v-mode
                 [:##h :!OCleft_arrow]
                 [:##l :!OCright_arrow]
                 [:##j :!OCc]
                 [:##k :!OCf]
                 [:##i :!OCz]
                 [:##n :return_or_enter]]}

        {:des "c-mode for remaining symbols ^ | \\ _ @"
         :rules [:c-mode
                 [:##u :!S6]
                 [:##j :!Sbackslash]
                 [:##k :!S2]
                 [:##m :backslash]
                 [:##comma :!Shyphen]]}]}
